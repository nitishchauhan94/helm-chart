name: Deploy Terraform Code

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        options:
          - dev
          - qa
          - prod

jobs:
 initialize-terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: actions/setup-terraform@v2
        with:
          terraform-version: 1.3.0

      - name: Initialize Terraform working directory
        run: |
          terraform init
 lint-terraform:
    runs-on: terraform-agent
    needs: initialize-terraform
    steps:
      - uses: actions/checkout@v3
      - name: Check Terraform code formatting
        run: |
          tf_fmt_file=$(terraform fmt | wc -l)
          if [[ ${tf_fmt_file} > 0 ]]; then
            echo "Please format terraform files using:- terraform fmt"
            exit 1
          else
            echo "All files are formatted using terraform fmt"
          fi

 validate-terraform:
    runs-on: terraform-agent
    needs: [initialize-terraform, lint-terraform]
    steps:
      - uses: actions/checkout@v3
      - name: Validate Terraform code
        run: |
          terraform init
          terraform validate

 scan-terraform-security:
    runs-on: terraform-agent
    needs: validate-terraform
    steps:
      - uses: actions/checkout@v3
      - name: Scan Terraform code for security issues
        run: |
          tfsec . --tfvars-file dev.tfvars
          if [ $? -ne 0 ]; then
            echo "Terraform code contains security vulnerabilities."
            exit 1
          else
            echo "Terraform code is free from security vulnerabilities."
          fi

 estimate-terraform-cost:
    runs-on: terraform-agent
    needs: validate-terraform
    steps:
      - uses: actions/checkout@v3
      - name: Estimate Terraform infrastructure cost
        run: |
          terraform init
          terraform plan | infracost
          if [ $? -ne 0 ]; then
            echo "Terraform infrastructure cost estimate failed."
            exit 1
          else
            echo "Terraform infrastructure cost estimate generated."
          fi

 plan-infrastructure:
    runs-on: terraform-agent
    needs: [validate-terraform, scan-terraform-security, estimate-terraform-cost]
    steps:
      - name: Set environment variable based on input
        id: set-env
        run: |
          echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - name: Plan Terraform changes
        run: |
          terraform init --var-file=${{ env.ENVIRONMENT }}.tfvars && terraform plan

 manual-deploy-confirmation:
    runs-on: terraform-agent
    needs: plan-infrastructure
    steps:
      - name: Check for manual confirmation
        uses: actions/github-script@v6
        with:
          script: |
            console.log("Deployment to environment ${{ github.event.inputs.environment }} is planned.")
            console.log("Please review the plan and confirm deployment manually.")
            console.log("To confirm deployment, comment 'deploy' on this workflow run.")

 deploy-infrastructure:
    runs-on: terraform-agent
    needs: [plan-infrastructure, manual-deploy-confirmation]
    if: startsWith(github.event.comment.body, 'deploy')
    env:
      TF_VAR_GOOGLE_CLOUD_PROJECT: ${{ env.GOOGLE_CLOUD_PROJECT }}
      TF_VAR_GOOGLE_REGION: ${{ env.GOOGLE_REGION }}
    steps:
      - name: Apply Terraform changes
        run: |
          terraform apply -auto-approve --var-file=${{ env.ENVIRONMENT }}.tfvars
